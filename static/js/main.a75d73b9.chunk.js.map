{"version":3,"sources":["components/List.jsx","components/Alert.jsx","App.js","index.js"],"names":["List","this","props","title","id","onEdit","onDelete","className","onClick","Component","Alert","type","text","useEffect","timeout","setTimeout","removeAlert","clearTimeout","App","useState","JSON","parse","localStorage","getItem","list","setList","input","setInput","alert","setAlert","isEditing","setIsEditing","editId","setEditId","handleDelete","newList","filter","item","showAlert","handleEdit","length","setItem","stringify","onSubmit","e","preventDefault","map","target","reset","name","value","placeholder","onChange","Date","getTime","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAsBeA,E,4JAlBX,WAAU,IAAD,EACmCC,KAAKC,MAArCC,EADH,EACGA,MAAOC,EADV,EACUA,GAAIC,EADd,EACcA,OAAQC,EADtB,EACsBA,SAC3B,OACI,0BAASC,UAAU,eAAnB,UACI,mBAAGA,UAAU,QAAb,SAAsBJ,IACtB,sBAAKI,UAAU,gBAAf,UACI,wBAAQC,QAAS,kBAAMH,EAAOD,IAAKG,UAAU,WAA7C,SACI,cAAC,IAAD,MAEJ,wBAAQC,QAAS,kBAAMF,EAASF,IAAKG,UAAU,aAA/C,SACI,cAAC,IAAD,gB,GAXLE,aCUJC,EAXD,SAACR,GAAW,IACdS,EAAeT,EAAfS,KAAMC,EAASV,EAATU,KAOd,OANAC,qBAAU,WACN,IAAMC,EAAUC,YAAW,WACvBb,EAAMc,YAAY,GAAI,MACvB,KACH,OAAO,kBAAMC,aAAaH,MAC3B,CAACZ,IACG,mBAAGK,UAAS,sBAAiBI,GAA7B,SAAsCC,KCsHlCM,MAnHf,WAAgB,IAAD,EACaC,mBATLC,KAAKC,MAAMC,aAAaC,QAAQ,UAIxC,IAIA,mBACJC,EADI,KACEC,EADF,OAEeN,mBAAS,CAAEf,GAAI,GAAID,MAAO,KAFzC,mBAEJuB,EAFI,KAEGC,EAFH,OAGeR,mBAAS,CAAER,KAAM,GAAIC,KAAM,KAH1C,mBAGJgB,EAHI,KAGGC,EAHH,OAIuBV,oBAAS,GAJhC,mBAIJW,EAJI,KAIOC,EAJP,OAKiBZ,mBAAS,MAL1B,mBAKJa,EALI,KAKIC,EALJ,KAmCLC,EAAe,SAAC9B,GAClB,IAAM+B,EAAUX,EAAKY,QAAO,SAACC,GAAD,OAAUA,EAAKjC,KAAOA,KAClDqB,EAAQU,GACRG,EAAU,SAAU,iBAGlBC,EAAa,SAACnC,GAChB,IAAMiC,EAAOb,EAAKY,QAAO,SAACC,GAAD,OAAUA,EAAKjC,KAAOA,KAC/C2B,GAAa,GACbE,EAAU7B,GACVuB,EAAS,CAAEvB,KAAID,MAAOkC,EAAK,GAAGlC,QAC9BmC,EAAU,SAAU,eAQlBA,EAAY,SAAC3B,EAAMC,GACrBiB,EAAS,CAAElB,OAAMC,UAQrB,OANAC,qBAAU,WACFW,EAAKgB,QAAU,GACflB,aAAamB,QAAQ,OAAQrB,KAAKsB,UAAUlB,MAEjD,CAACA,IAGA,0BAASjB,UAAU,iBAAnB,UACI,uBAAMA,UAAU,eAAeoC,SA1DlB,SAACC,GAClBA,EAAEC,iBACGnB,EAAMvB,MAIPuB,GAASI,GACTL,EACID,EAAKsB,KAAI,SAACT,GACN,OAAIA,EAAKjC,KAAO4B,EACL,2BAAKK,GAAZ,IAAkBlC,MAAOuB,EAAMvB,QAE5BkC,MAGfV,EAAS,CAAEvB,GAAI,GAAID,MAAO,KAC1B8B,EAAU,MACVF,GAAa,GACbO,EAAU,UAAW,iBACrBM,EAAEG,OAAOC,SACFtB,IAAUI,IACjBL,EAAQ,GAAD,mBAAKD,GAAL,CAAWE,KAClBC,EAAS,CAAEvB,GAAI,GAAID,MAAO,KAC1BmC,EAAU,UAAW,sBACrBM,EAAEG,OAAOC,SArBTV,EAAU,SAAU,uBAuDpB,UACKV,EAAMjB,MAAQ,cAAC,EAAD,2BAAWiB,GAAX,IAAkBZ,YAAasB,KAC9C,6CACA,sBAAK/B,UAAU,eAAf,UACI,uBACIA,UAAU,UACVI,KAAK,OACLsC,KAAK,UACL7C,GAAG,UACH8C,MAAOxB,EAAMvB,MACbgD,YAAY,YACZC,SAAU,SAACR,GACP,GAAId,EACAH,EAAS,CAAEvB,GAAI4B,EAAQ7B,MAAOyC,EAAEG,OAAOG,YACpC,CACH,IAAM9C,GAAK,IAAIiD,MAAOC,UACtB3B,EAAS,CAAEvB,GAAIA,EAAID,MAAOyC,EAAEG,OAAOG,YAI/C,wBAAQ3C,UAAU,aAAaI,KAAK,SAApC,SACKmB,EAAY,OAAS,cAIjCN,EAAKgB,OAAS,GACX,sBAAKjC,UAAU,oBAAf,UACI,qBAAKA,UAAU,eAAf,SACKiB,EAAKsB,KAAI,SAACT,GAAU,IACTjC,EAAciC,EAAdjC,GAAID,EAAUkC,EAAVlC,MACZ,OACI,cAAC,EAAD,CAEIC,GAAIA,EACJD,MAAOA,EACPG,SAAU4B,EACV7B,OAAQkC,GAJHnC,QASrB,wBAAQI,QAzDJ,WAChBiB,EAAQ,IACRa,EAAU,SAAU,eAuDsB/B,UAAU,YAAxC,gCClHpBgD,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.a75d73b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FaEdit, FaTrash } from 'react-icons/fa';\r\n\r\nclass List extends Component {\r\n    render() {\r\n        const { title, id, onEdit, onDelete } = this.props;\r\n        return (\r\n            <article className='grocery-item'>\r\n                <p className='title'>{title}</p>\r\n                <div className='btn-container'>\r\n                    <button onClick={() => onEdit(id)} className='edit-btn'>\r\n                        <FaEdit />\r\n                    </button>\r\n                    <button onClick={() => onDelete(id)} className='delete-btn'>\r\n                        <FaTrash />\r\n                    </button>\r\n                </div>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React, { useEffect } from 'react';\r\n\r\nconst Alert = (props) => {\r\n    const { type, text } = props;\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            props.removeAlert('', '');\r\n        }, 3000);\r\n        return () => clearTimeout(timeout);\r\n    }, [props]);\r\n    return <p className={`alert alert-${type}`}>{text}</p>;\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from 'react';\nimport List from './components/List';\nimport Alert from './components/Alert';\n\nconst getStoredList = () => {\n    const storedList = JSON.parse(localStorage.getItem('list'));\n    if (storedList) {\n        return storedList;\n    } else {\n        return [];\n    }\n};\n\nfunction App() {\n    const [list, setList] = useState(getStoredList());\n    const [input, setInput] = useState({ id: '', title: '' });\n    const [alert, setAlert] = useState({ type: '', text: '' });\n    const [isEditing, setIsEditing] = useState(false);\n    const [editId, setEditId] = useState(null);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!input.title) {\n            showAlert('danger', 'please enter value');\n            return;\n        }\n        if (input && isEditing) {\n            setList(\n                list.map((item) => {\n                    if (item.id === editId) {\n                        return { ...item, title: input.title };\n                    }\n                    return item;\n                })\n            );\n            setInput({ id: '', title: '' });\n            setEditId(null);\n            setIsEditing(false);\n            showAlert('success', 'value changed');\n            e.target.reset();\n        } else if (input && !isEditing) {\n            setList([...list, input]);\n            setInput({ id: '', title: '' });\n            showAlert('success', 'item added to list');\n            e.target.reset();\n        }\n    };\n\n    const handleDelete = (id) => {\n        const newList = list.filter((item) => item.id !== id);\n        setList(newList);\n        showAlert('danger', 'item removed');\n    };\n\n    const handleEdit = (id) => {\n        const item = list.filter((item) => item.id === id);\n        setIsEditing(true);\n        setEditId(id);\n        setInput({ id, title: item[0].title });\n        showAlert('danger', 'editing...');\n    };\n\n    const handleClear = () => {\n        setList([]);\n        showAlert('danger', 'empty list');\n    };\n\n    const showAlert = (type, text) => {\n        setAlert({ type, text });\n    };\n    useEffect(() => {\n        if (list.length >= 0) {\n            localStorage.setItem('list', JSON.stringify(list));\n        }\n    }, [list]);\n\n    return (\n        <section className='section-center'>\n            <form className='grocery-form' onSubmit={handleSubmit}>\n                {alert.type && <Alert {...alert} removeAlert={showAlert} />}\n                <h3>grocery bud</h3>\n                <div className='form-control'>\n                    <input\n                        className='grocery'\n                        type='text'\n                        name='grocery'\n                        id='grocery'\n                        value={input.title}\n                        placeholder='e.g. eggs'\n                        onChange={(e) => {\n                            if (isEditing) {\n                                setInput({ id: editId, title: e.target.value });\n                            } else {\n                                const id = new Date().getTime();\n                                setInput({ id: id, title: e.target.value });\n                            }\n                        }}\n                    />\n                    <button className='submit-btn' type='submit'>\n                        {isEditing ? 'edit' : 'add'}\n                    </button>\n                </div>\n            </form>\n            {list.length > 0 && (\n                <div className='grocery-container'>\n                    <div className='grocery-list'>\n                        {list.map((item) => {\n                            const { id, title } = item;\n                            return (\n                                <List\n                                    key={id}\n                                    id={id}\n                                    title={title}\n                                    onDelete={handleDelete}\n                                    onEdit={handleEdit}\n                                />\n                            );\n                        })}\n                    </div>\n                    <button onClick={handleClear} className='clear-btn'>\n                        clear items\n                    </button>\n                </div>\n            )}\n        </section>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}